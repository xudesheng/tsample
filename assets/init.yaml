# Modify this with your name and email address, but it's optional.
owner:
  name: "Desheng Xu"
  email: "xudesheng@gmail.com"
  organization: "Demotest Io Inc."

# scrap interval time in seconds, optional, default is 30 seconds.
scrap_interval: 30

# refresh connection server or c3p0 driver interval time, optional, default is 300 seconds.
refresh_server_interval: 300
# Usually, you don't need to touch this block.
# this will be the default value for the "subsystems" for each Thingworx Server.
# If you want to configure the "subsystems" differently for each Thingworx Server, 
# please modify the subsystems part underneath each server.
default_subsystems: &default_subsystems
  - name: "ValueStreamProcessingSubsystem"
    # only value stream, stream and data table 3 subsystems need this option.
    # it will split the leading text as a label for different persistent providers.
    split_desc_asprefix: true
    # each subsystem will be enabled by default, you can disable it by setting "enabled" to false.
    # enabled: true

    # by default, all metrics inside the subsystem will be grasped (except string value)
    # options:
    #   - totalWritesQueued
    #   - totalWritesPerformed
    #   - queueSize
  - name: "StreamProcessingSubsystem"
    split_desc_asprefix: true
  - name: "EventProcessingSubsystem"
  - name: "DataTableProcessingSubsystem"
    split_desc_asprefix: true
  - name: "PlatformSubsystem"
    enabled: false
  - name: "WSCommunicationsSubsystem"
    enabled: false
  - name: "WSExecutionProcessingSubsystem"
  - name: "TunnelSubsystem"
  - name: "AlertProcessingSubsystem"
  - name: "FederationSubsystem"

# this block is mandatory, it should at least have one server configured.
thingworx_servers:
  - name: "platform1"
    # the hostname or IP address of the Thingworx Server, default is localhost
    host: "yourserver.demotest.io"
    # the port of the Thingworx Server, default is 8080
    port: 443
    # the protocol of the Thingworx Server, default is http. valid values are http and https
    protocol: https
    # the application name of the Thingworx Server, default is "Thingworx"
    # application: "Thingworx"

    # the appkey of the Thingworx Server, this is mandatory.
    app_key: "e5d38c56-c8da-4bff-bba3-06bf3da7474a"
    
    # the "subsystems" for this Thingworx Server.
    # If you want to configure the "subsystems" differently for each Thingworx Server, 
    # please modify the subsystems part underneath each server.
    subsystems: *default_subsystems

    # the connection_servers block is optional. If it's not presented, then no connection server metrics will be scraped.
    # you have to install connection server in order to use this block.
    connection_servers:
      # the name of the connection server, an empty list means this tool will scrape the name of all connection servers dynamically.
      names: []
      # the metrics of the connection server, default is all metrics (when it's empty).
      metrics: []

    # this jmx_metrics is optional, you have to install specific jmx extension in order to use this block.
    jmx_metrics:
    # the name is mandatory since it will be used as the measurement name in InfluxDB.
    # a "sub_name" label will be added into the measurements. the value will be the name of c3p0 or memory status or other name from the objectNameField.
    # if you defined "name_label_alternative", then the value of the "sub_name" label will be "sub_{value}".
    - name: jmx_c3p0_connections
      # the jmx_object_name is mandatory since it will be used to get the metrics from JMX.
      # for simplicity, we will use this value to search any object name starts with it.
      object_name_pattern: "com.mchange.v2.c3p0:type=PooledDataSource,identityToken"

      # this is optional. if you want to use the value from a different object in the query result as the sub_name label.
      # caution: the name for 'name_label_alternative' must be in the next list if the next list is not empty.
      #name_label_alternative: "threadPoolSize"

      # this list is optional, if you want to filter the metrics by the name of the object.
      # if it's empty, then all metrics will be scraped.
      #metrics: ["threadPoolSize","numConnectionsAllUsers","statementCacheNumConnectionsWithCachedStatementsDefaultUser","allUsers","statementCacheNumStatementsDefaultUser"]
    - name: jmx_memory_status
      # the sub_name of this measurement will be like: G1 Old Gen, G1 Survivor Space etc.
      object_name_pattern: "java.lang:type=MemoryPool,name="
      # you can add/remove field in the blow list, or make it empty to include all fields.
      metrics: ["PeakUsage_committed","PeakUsage_init","Valid","PeakUsage_used","Usage_committed","Usage_used","Usage_init","CollectionUsage_used","CollectionUsage_committed","CollectionUsage_init","CollectionUsageThresholdCount",]


    # in the case where you want to grab the metrics from any URL, you can use this block.
    # the url is the full URL after /Thingworx of the metrics.
    # as long as the result follows the sample JSON format, it will be parsed and scraped. the JSON format should
    # be like: name, value, description.
    # url example: /Resources/TS.PersistenceMetrics/Services/GetPersistentPropertyProcessingMetrics
    # this block is optional.
    arbitrary_metrics:
        # the name of the arbitary metric, this is mandatory.
        # it will also be used as the measurement name in InfluxDB
      - name: "PersistentPropertyMetrics"
        # the url of the arbitary metrics, this is mandatory.
        url: "/Resources/TS.PersistenceMetrics/Services/GetPersistentPropertyProcessingMetrics"

  # - name: "Thingworx-Server-2"
  #   host: "localhost"
  #   port: 8081
  #   protocols: http
  #   application: "Thingworx"
  #   app_key: "8d9f6189-1939-4542-97ce-5a6fc75a0372"
  #   subsystems: *default_subsystems
export_to_influxdb:
  # the hostname or IP address of the InfluxDB server, default is localhost
  server_name: "127.0.0.1"
  # the port of the InfluxDB server, default is 8086
  port: 8086
  # the protocol of the InfluxDB server, default is http. valid values are http and https
  protocol: "http"

  # the database name for metrics data, mandatory.
  database: "thingworx"

  # the username for the InfluxDB server, optional
  #username: "twadmin"

  # the password for the InfluxDB server, optional
  #password: "twadmin"

  # enable influx export, default is true
  enabled: true

export_to_file:
  # the directory for metrics data, mandatory.
  directory: "./export"

  # auto create the directory if it doesn't exist, default is true
  auto_create_folder: true

  # enable file export, default is false
  enabled: false
